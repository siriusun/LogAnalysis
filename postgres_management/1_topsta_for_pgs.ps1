#ACL TOP log export tool 2024/03/28 08:59:01

function New-Folder {
    param (
        $NewFolderName
    )
    if (Test-Path $NewFolderName) {
        Remove-Item -Recurse $NewFolderName
    }
    New-Item -Path $work_pth -ItemType Directory -Name $NewFolderName
}

$work_pth = "D:\DataWork\AllWerfenChinaTop\posgres_source\topsta_generalLog\Data"
"`n"
Write-Host "Work Path: $work_pth" -ForegroundColor Yellow -BackgroundColor Black
"`n"
Set-Location $work_pth

Write-Host 
"*************************************************************
***  ACL TOP log generated by DBExtract.1.21 or SiteAgent ***
*************************************************************`n`n"

$toplog_DBXs = Get-ChildItem -Path ($work_pth.ToString() + "\SourceLogs\") | Where-Object { $_.Extension -like ".rar" -or $_.Extension -like ".zip" -or $_.Extension -like ".7z" }
if ($null -eq $toplog_DBXs) {
    "No log files found. Any Key to Exit..."
    [System.Console]::ReadKey() | Out-Null ; Exit
}
$toplog_SiteAgent = Get-ChildItem -Path ($work_pth.ToString() + "\SourceLogs\") -Filter CHINA*DBX*
foreach ($log in $toplog_SiteAgent) {
    $nameDBX = "DBX_" + $log.Name.Split("DBX_")[1]
    Rename-Item $log.FullName -NewName $nameDBX
}

$FormatVar = 0
While (1) { 
    if ($FormatVar -ge 1) {
        write-host	"`n`n"
    }
    $FormatVar ++
    #Select the log type
    "`n"
    write-host "Select logs to Generate:" -ForegroundColor Yellow -BackgroundColor Black
    "1 : GeneralLog`n2 : CountersForAllTest`n3 : sw_all_versions`n4 : osTask`n5 : Quit"
    $Select = read-host ">>"
    #define the keyword to generate log
    if ($Select -eq 1) {
        $LogTxt = "generalLog.txt"
    }
    elseif ($Select -eq 2) {
        $LogTxt = "countersForAllTestTypesDeterminations.txt"
    }
    elseif ($Select -eq 3) {
        $LogTxt = "sw_all_versions.txt"
    }
    elseif ($Select -eq 4) {
        $LogTxt = "TASKLIST.txt"
    }
    elseif ($Select -eq 5) {
        break
    }
    else {
        Write-Host "Please input number 1-5"
        Continue
    }

    #create the logtype hashtable
    $SelectTable = @{"1" = "GeneralLogs"; "2" = "CountersForAllTest"; "3" = "SoftwareVersions"; "4" = "osTask" }
    $txt_toplog_folder = $SelectTable[$Select]

    #create the output folder
    New-Folder($txt_toplog_folder)

    $DBXs = Get-ChildItem -Recurse -Path ($work_pth + "\SourceLogs\") | Where-Object { $_.Extension -like ".rar" -or $_.Extension -like ".zip" -or $_.Extension -like ".7z" }

    $Step = 0
    $text_toplog_fullpath = "-o" + $work_pth + "\" + $txt_toplog_folder + "\"
    foreach ($dbx in $DBXs) {
        "-" * 100
        Write-Host (">>>>: " + $dbx.FullName) -BackgroundColor Black -ForegroundColor Yellow
        $toplog_date_SN = $dbx.Name.Split("_")[1] + "_" + $dbx.Name.Split("_")[2] + ".txt"
        #7z decompress the DBX file to txt_toplog_folder
        7z.exe e $dbx.FullName -pfixmeplease $text_toplog_fullpath $LogTxt -aos
        $rename_source = Get-ChildItem -Path "$work_pth\$txt_toplog_folder" -Recurse -Filter $LogTxt
        Rename-Item -Path $rename_source.FullName -NewName $toplog_date_SN
        "-" * 100
        "`n`n"
        $Step ++
    }
    write-host  "$txt_toplog_folder done."
}
"`n"
Write-Host "**********  TopLogs Generated  **********" -ForegroundColor Yellow -BackgroundColor Black